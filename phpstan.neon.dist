parameters:
	paths:
		- api
		- Civi
		- CRM
		- tests
	excludePaths:
		analyse:
			- CRM/Funding/DAO/*
			- CRM/Funding/Upgrader/Base.php
			- tests/phpunit/bootstrap.php
	scanFiles:
		- funding.civix.php
		- tools/phpunit/vendor/bin/.phpunit/phpunit/src/Framework/TestCase.php
	scanDirectories:
		- tools/phpunit/vendor/bin/.phpunit/phpunit/src/Framework
		- vendor/civicrm/civicrm-core/
	bootstrapFiles:
		- tools/phpunit/vendor/bin/.phpunit/phpunit/vendor/autoload.php
		- vendor/autoload.php
		- phpstanBootstrap.php
	stubFiles:
		- stubs/AbstractAction.stub
		- stubs/Civi.stub
		- stubs/CiviEventDispatcher.stub
	level: 9
	checkTooWideReturnTypesInProtectedAndPublicMethods: true
	checkUninitializedProperties: true
	checkMissingCallableSignature: true
	treatPhpDocTypesAsCertain: false
	exceptions:
		check:
			missingCheckedExceptionInThrows: true
			tooWideThrowType: true
		checkedExceptionClasses:
			- \Webmozart\Assert\InvalidArgumentException
		implicitThrows: false
	ignoreErrors:
		# Note paths are prefixed with ""*/" to wirk with inspections in PHPStorm because of:
		# https://youtrack.jetbrains.com/issue/WI-63891/PHPStan-ignoreErrors-configuration-isnt-working-with-inspections
		-
			message: '#has an uninitialized property#'
			paths:
				- */Civi/Funding/Event/*.php
				- */Civi/RemoteTools/Event/*.php
		-
			message: '#^Access to an undefined property Civi\\Api4\\Generic\\AbstractAction::\$_eventDispatcher.$#'
			path: */Civi/RemoteTools/Api4/Action/Traits/EventActionTrait.php
		- '#^Class Civi\\Funding\\Api4\\Action\\[^\s]+Action has an uninitialized property \$[^\s]+\. Give it default value or assign it in the constructor.$#'
		# For actions that are fetched from container
		-
			message: '#^Cannot call method setCheckPermissions\(\) on mixed.$#'
			path: */Civi/Api4/*.php
		- '#^Method Civi\\Api4\\[^\\]+::[^(]+\(\) should return Civi\\Funding\\Api4\\Action\\[^\s]+\\[^\s]+Action but returns mixed.$#'
		- '#^Access to an uninitialized property Civi\\Funding\\Event\\[^\s]+Event::\$[^\s]+.$#'
		-
			message: '#^PHPDoc tag @var for constant [^\s]+::[^\s]+ with type string is incompatible with value null.$#'
			path: */Civi/RemoteTools/EventSubscriber/Abstract*.php
		- # false positive
			message: '#^Variable \$granted might not be defined.$#'
			path: */Civi/RemoteTools/Authorization/PermissionChecker.php
		-
			message: '#^Variable property access on \$this\(Civi\\RemoteTools\\Event\\AbstractRequestEvent\).$#'
			path: */Civi/RemoteTools/Event/AbstractRequestEvent.php
		- '#^Method Civi\\RemoteTools\\Event\\GetEvent::addClause\(\) has parameter \$conditions with no value type specified in iterable type array.$#'
		- '#^Property Civi\\RemoteTools\\Event\\DAOGetEvent::\$join type has no value type specified in iterable type array.$#'
		- '#^Method Civi\\RemoteTools\\Event\\DAOGetEvent::addJoin\(\) has parameter \$conditions with no value type specified in iterable type array.$#'
		- '#^Method Civi\\RemoteTools\\Event\\DAOGetEvent::getJoin\(\) return type has no value type specified in iterable type array.$#'
		- '#^Method Civi\\RemoteTools\\Api4\\Query\\[^\\]+::toArray\(\) return type has no value type specified in iterable type array.$#'
		- '#^Property Civi\\Api4\\Generic\\Result::\$debug \(array\) on left side of \?\? is not nullable.$#'
		- '#^Method Civi\\RemoteTools\\Api4\\Api4::createAction\(\) should return Civi\\Api4\\Generic\\AbstractAction but returns array|Civi\Api4\Generic\AbstractAction.$#'
		- '#extends deprecated class Symfony\\Component\\EventDispatcher\\Event:#'
		- '#^Call to deprecated method stopPropagation\(\) of class Symfony\\Component\\EventDispatcher\\Event:#'
		- '#^Class Civi\\Funding\\Entity\\[^\s]+ has an uninitialized property \$values. Give it default value or assign it in the constructor.$#'
		- '#^PHPDoc type array\{[^}]+\} of property Civi\\Funding\\Entity\\[^:]+::\$values is not the same as PHPDoc type array\{[^}]+\} of overridden property Civi\\Funding\\Entity\\AbstractEntity::\$values.$#'
		- '/^Parameter #1 \$eventName of method Civi\\Core\\CiviEventDispatcher::dispatch\(\) expects object, string given.$/'
		- '/^Parameter #1 \$iterator of function iterator_to_array expects Traversable, iterable(<.+>)? given.$/' # false positive
		-
			message: '#^Call to function method_exists\(\) with .+ will always evaluate to true.$#'
			path: */tests/phpunit/**/EventSubscriber/*SubscriberTest.php
		-
			message: "#^Offset '[a-zA-Z0-9_]+' does not exist on array\\|null.$#"
			path: */tests/phpunit/Civi/Api4/*Test.php
		-
			message: '#^Class [^\s]+ has an uninitialized property#'
			path : */tests/phpunit/Civi/Funding/Mock/**/*.php
		- '#^Method Civi\\Funding\\Fixtures\\[^\s]+Fixture::[^\s]+\(\) should return array{[^}]+} but returns array\|null.$#'
	tmpDir: .phpstan
